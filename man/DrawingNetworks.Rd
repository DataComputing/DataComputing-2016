% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/NetworkHelpers.R
\name{edgesToVertices}
\alias{edgesForPlotting}
\alias{edgesToVertices}
\title{Helper functions for drawing networks}
\usage{
edgesToVertices(Edges, from, to)
}
\arguments{
\item{\code{Edges}}{Data frame giving, at a minimum,
the names of the nodes arranged as an edgelist:
<to> and <from> columns where each case is one edge.}

\item{\code{from}}{Name of the <from> variable in the edgelist}

\item{\code{to}}{Name of the <from> variable in the edgelist}

\item{\code{Vertices}}{a data frame containing vertex IDs
and x,y coordinates for each vertex.}

\item{\code{ID}}{variable containing the ID of
the vertices}

\item{\code{x}}{variable holding x-position of vertex}

\item{\code{y}}{variable holding y-position of vertex}

\item{\code{Edges}}{dataframe containing the from and to
connection for each edge.  from and to should be drawn
from the same set as ID in Vertices.}
}
\value{
A data frame containing all the vertex IDs,
with x and y positions for each one.
}
\description{
These functions translate an edge list into a positioned
node list, and augment the edge list with the positions
in the node list. Suppose you have only an edges file Edge with columns
from, to, strength, age.  Make the corresponding Vertex file:
\code{V <- edgesToVertices( Edge, from=from,to=to )}
V will be a vertices file with x and y assigned
Or, if you already have a V with x and y, skip the edgesToVertices
step.
Now augment the Edge dataframe with the positions
x, y, xend, yend
\code{E <- edgesForPlotting( V, ID=ID, x=x, y=y, Edges, from=from, to=to)}
Now you can plot E and V
\code{ggplot() + }
\code{geom_segment(E,aes(x=x,y=y,yend=yend,xend=xend)) + }
\code{geom_point( V, aes(x=x,y=y) ) + }
\code{geom_text( V, aes(x=x,y=y,label=ID))}
}

